syntax = "proto3";

package auction;

option go_package = "auction/go-architecture/pb";

message Auction {
  string id = 1;
  string name = 2;
  string description = 3;
  double starting_bid = 4;
  double current_bid = 5;
  string highest_bidder = 6;
  int64 duration_seconds = 7;
  string status = 8;
  int64 closing_time = 9;
}

message HistoryEvent {
  string auction_id = 1;
  string event_type = 2;
  string payload = 3;
  int64 timestamp = 4;
}

message AuctionCommand {
  string command = 1;
  Auction auction = 2;
  double bid_amount = 3;
  string bidder = 4;
}

message AuctionResponse {
  bool ok = 1;
  string message = 2;
  Auction auction = 3;
  repeated Auction auctions = 4;
  repeated HistoryEvent history = 5;
}

message Empty {}

service AuctionGateway {
  rpc Execute(AuctionCommand) returns (AuctionResponse);
  rpc GetHistory(Empty) returns (AuctionResponse);
}

service AuctionCatalog {
  rpc Execute(AuctionCommand) returns (AuctionResponse);
}

service BidValidator {
  rpc Execute(AuctionCommand) returns (AuctionResponse);
}

service HistoryRecorder {
  rpc Execute(AuctionCommand) returns (AuctionResponse);
  rpc List(Empty) returns (AuctionResponse);
}

service UpdateBroadcaster {
  rpc Publish(HistoryEvent) returns (AuctionResponse);
  rpc List(Empty) returns (AuctionResponse);
}

service WinnerNotifier {
  rpc Execute(AuctionCommand) returns (AuctionResponse);
}
